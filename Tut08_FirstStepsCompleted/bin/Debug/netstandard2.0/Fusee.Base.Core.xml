<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusee.Base.Core</name>
    </assembly>
    <members>
        <member name="T:Fusee.Base.Core.AssetStorage">
            <summary>
            A class providing access to Assets. An asset is considered any content to be loaded, de-serialized and converted during
            an application's lifetime. Often Assets should be loaded up-front and accessed during run-time with no perceivable delay.
            AssetStorage is a staticton (a singleton with an additional static interface).
            </summary>
            <remarks>
            The existance of this class is a tribute to the Web-world where a lot of asset types (e.g. images) are JavaScript built-in
            functionality with no possibility to separate the many aspects of asset-access (like loading, deserialization, codec,
            asynchronicity). Decent programming environments allow to separate these aspects using streams. A decoder is implemented
            against a stream. Anything capable of providing streams, synchronously or asynchronousliy thus can act as an asset store.
            If FUSEE had been designed without JavaScript X-compilation in mind, this class would probably not
            exist.
            </remarks>
        </member>
        <member name="P:Fusee.Base.Core.AssetStorage.Instance">
            <summary>
            Implements the Singleton pattern.
            </summary>
            <value>
            The (one-and-only) instance of AssetStorage.
            </value>
        </member>
        <member name="M:Fusee.Base.Core.AssetStorage.Get``1(System.String)">
            <summary>
            Staticton implementation of <see cref="M:Fusee.Base.Core.AssetStorage.GetAsset``1(System.String)"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Base.Core.AssetStorage.GetAsset``1(System.String)">
            <summary>
            Retrieves the asset identified by id.
            </summary>
            <typeparam name="T">The expected type of the asset to retrieve.</typeparam>
            <param name="id">The identifier.</param>
            <returns>The asset, if found. Otherwise null.</returns>
            <remarks>Internally, this method queries all of the registerd asset providers (<see cref="M:Fusee.Base.Core.AssetStorage.RegisterAssetProvider(Fusee.Base.Common.IAssetProvider)"/>.
            The first asset provider capable of retrieving the asset "wins". It's up to any appliacation to guarantee
            uniquenesss of asset identifiers among all assets and asset providers.
            </remarks>
        </member>
        <member name="M:Fusee.Base.Core.AssetStorage.RegisterProvider(Fusee.Base.Common.IAssetProvider)">
            <summary>
            Staticton implementation of <see cref="M:Fusee.Base.Core.AssetStorage.RegisterAssetProvider(Fusee.Base.Common.IAssetProvider)"/>.
            </summary>
            <param name="assetProvider">The asset provider.</param>
        </member>
        <member name="M:Fusee.Base.Core.AssetStorage.RegisterAssetProvider(Fusee.Base.Common.IAssetProvider)">
            <summary>
            Registers the given asset provider. Use this method to register asset providers 
            for the platform (desktop, mobile, web) your main application should run on.
            </summary>
            <param name="assetProvider">The asset provider to register.</param>
        </member>
        <member name="M:Fusee.Base.Core.AssetStorage.DeepCopy``1(``0)">
            <summary>
            Creates a deep copy of the source object. Only works for source objects with the 
            <see cref="T:ProtoBuf.ProtoContractAttribute"/> defined on their class.
            </summary>
            <typeparam name="T">
              Type of the source and object and the returnded clone. Implicitely defined by the source parameter.
            </typeparam>
            <param name="source">The source object to clone.</param>
            <returns>A deep copy of the source object. All objects referenced directly and indirectly from the source
             object are copied, too.</returns>
        </member>
        <member name="T:Fusee.Base.Core.Diagnostics">
            <summary>
            Contains some mostly static functions for diagnostic purposes.
            </summary>
        </member>
        <member name="P:Fusee.Base.Core.Diagnostics.Timer">
            <summary>
            High precision timer values.
            </summary>
            <value>
            A double value containing consecutive real time values in milliseconds.
            </value>
            <remarks>
            To measure the elapsed time between two places in code get this value twice and calculate the difference.
            </remarks>
        </member>
        <member name="M:Fusee.Base.Core.Diagnostics.Log(System.Object)">
            <summary>
            Log a debug output message to the respective output console.
            </summary>
            <param name="o">The object to log. Will be converted to a string.</param>
        </member>
        <member name="T:Fusee.Base.Core.Font">
            <summary>
            A Font instance contains methods to access font and glyph data stored in a font
            description (TrueType or OpenType fonts).
            </summary>
        </member>
        <member name="F:Fusee.Base.Core.Font._fontImp">
            <summary>
            For implementation purposes only. Do not use this.
            </summary>
        </member>
        <member name="P:Fusee.Base.Core.Font.UseKerning">
            <summary>
                Gets or sets a value indicating whether the kerning definition of a font should be used.
            </summary>
            <value>
                <c>true</c> if the kerning definition of a font should be used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Base.Core.Font.PixelHeight">
            <summary>
            Gets or sets the size in pixels.
            </summary>
            <value>
            The vertical size of the font in pixels.
            </value>
        </member>
        <member name="M:Fusee.Base.Core.Font.GetGlyphInfo(System.UInt32)">
            <summary>
            Gets the character information.
            </summary>
            <param name="c">The character to retrieve information.</param>
            <returns>An information record about the character.</returns>
        </member>
        <member name="M:Fusee.Base.Core.Font.GetGlyphCurve(System.UInt32)">
            <summary>
            Gets the character's points, contours and tags and translates them into a curve.
            </summary>
            <param name="c">The character from which the information is to be read.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Base.Core.Font.GetUnscaledAdvance(System.UInt32)">
            <summary>
            Get the unscaled advance from a character.
            </summary>
            <param name="c">The character from which the information is to be read.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Base.Core.Font.RenderGlyph(System.UInt32,System.Int32@,System.Int32@)">
            <summary>
                Renders the given glyph.
            </summary>
            <param name="c">The character code (Unicode) of the character to render.</param>
            <param name="bitmapLeft">
                The x-Bearing of the glyph on the bitmap (in pixels). The number of pixels from the left border of the image 
                to the leftmost pixel of the glyph within the rendered image.
            </param>
            <param name="bitmapTop">
                The y-Bearing of the glyph on the bitmap (in pixels). The number of pixels from the character's origin 
                (base line) of the image to the topmost pixel of the glyph within the rendered image.
            </param>
            <returns>
                An image data structure containing an image of the given character.
            </returns>
        </member>
        <member name="M:Fusee.Base.Core.Font.GetKerning(System.UInt32,System.UInt32)">
            <summary>
            Gets the kerning offset between a pair of two consecutive characters in a text string.
            </summary>
            <param name="leftC">The left character.</param>
            <param name="rightC">The right character.</param>
            <returns>An offset to add to the normal advance. Typically negative since kerning rather compacts text lines.</returns>
        </member>
        <member name="M:Fusee.Base.Core.Font.GetUnscaledKerning(System.UInt32,System.UInt32)">
            <summary>
            Gets the unscaled kerning offset between a pair of two consecutive characters in a text string.
            </summary>
            <param name="leftC">The left character.</param>
            <param name="rightC">The right character.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Base.Core.ImageData">
            <summary>
            ImageData solves the problem of handling bitmaps in fusee by offering functions of bitmap manipulation.
            </summary>
        </member>
        <member name="P:Fusee.Base.Core.ImageData.PixelData">
            <summary>
            The byte array that makes up this ImageData instance.
            </summary>
        </member>
        <member name="M:Fusee.Base.Core.ImageData.#ctor(System.Byte[],System.Int32,System.Int32,Fusee.Base.Common.ImagePixelFormat)">
            <summary>
            Constructor takes the pixelData byte array, width and height dimensions in pixels and the <see cref="T:Fusee.Base.Common.ImagePixelFormat"/>.
            </summary>
            <param name="pixelData">The pixelData byte array contains all bitmap pixels.</param>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <param name="colorFormat"><see cref="T:Fusee.Base.Common.ImagePixelFormat"/> provides additional information about pixel Encoding.</param>
        </member>
        <member name="P:Fusee.Base.Core.ImageData.Width">
            <summary>
            Width in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Base.Core.ImageData.Height">
            <summary>
            Height in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Base.Core.ImageData.PixelFormat">
            <summary>
            PixelFormat provides additional information about pixel encoding.
            </summary>
        </member>
        <member name="M:Fusee.Base.Core.ImageData.Blt(System.Int32,System.Int32,Fusee.Base.Common.IImageData,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies a rectangular block of pixel data from a source image to a this image (Blt = BlockTransfer).
            </summary>
            <param name="xDst">The x destination coordinate (where to place the block within dst).</param>
            <param name="yDst">The y destination coordinate (where to place the block within dst).</param>
            <param name="src">The source image.</param>
            <param name="xSrc">The x source coordinate (where to start copying from within src).</param>
            <param name="ySrc">The y source coordinate (where to start copying from within src).</param>
            <param name="width">The width of the block to copy. (default is src.Width).</param>
            <param name="height">The height of the block to copy (default is src.Height).</param>
            <remarks>
                All specified parameters are clipped to avoid out-of-bounds indices. No warnings or exceptions are issued
                in case clipping results in a smaller or an empty block.
            </remarks>
        </member>
        <member name="M:Fusee.Base.Core.ImageData.ScanLines(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieve a rectangular block from this image that is represented by horizontal ScanLines from top to bottom along width and height, beginning at offsets xSrc and ySrc.
            </summary>
            <param name="xSrc">x offset in pixels.</param>
            <param name="ySrc">y offset in pixels.</param>
            <param name="width">width of ScanLines in pixels.</param>
            <param name="height">Height describes how many ScanLines will be returned.</param>
            <returns>Returns a rectangular block of horizontal ScanLine instances.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Fusee.Base.Core.ImageData.ClipBlt(System.Int32@,System.Int32,System.Int32@,System.Int32,System.Int32@)">
            <summary>
            Performs clipping along one dimension of a blt operation.
            </summary>
            <param name="iDst">The destination coordinate.</param>
            <param name="sizeDst">The size of the destination buffer.</param>
            <param name="iSrc">The source coordinate.</param>
            <param name="sizeSrc">The size of the source coordinate.</param>
            <param name="sizeBlk">The size of the block to copy.</param>
            <remarks>
               All parameters decorated with "ref" might be altered to avoid out-of-bounds indices.
               If the resulting number of items to copy is 0, only sizeBlk will be set to 0. No other
               ref-parameter will be altered then.
            </remarks>
        </member>
        <member name="P:Fusee.Base.Core.ImageData.IsEmpty">
            <summary>
            Checks if an image contains no data by checking if <see cref="P:Fusee.Base.Core.ImageData.Width"/> or <see cref="P:Fusee.Base.Core.ImageData.Height"/> is 0.
            </summary>
            <value>
            <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Fusee.Base.Core.ImageData.CreateImage(System.Int32,System.Int32,Fusee.Base.Common.ColorUint)">
            <summary>
            Creates an image and fills it with the given color.
            </summary>
            <param name="width">The width (in pixels) of the image to create.</param>
            <param name="height">The height (in pixels) of the image to create.</param>
            <param name="color">The color to fill the image with.</param>
            <returns>The newly created image.</returns>
        </member>
        <member name="T:Fusee.Base.Core.IO">
            <summary>
            Contains static methods not supported by portable libraries
            dealing with input/output.
            </summary>
        </member>
        <member name="P:Fusee.Base.Core.IO.IOImp">
            <summary>
            The platform dependent implementation of all IO functionality.
            </summary>
            <value>
            The io implementation.
            </value>
        </member>
        <member name="M:Fusee.Base.Core.IO.StreamFromFile(System.String,Fusee.Base.Common.FileMode)">
            <summary>
            Opens a file and returns its contents as a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="path">The path to the file to open.</param>
            <param name="mode">The mode.</param>
            <returns>
            A stream
            </returns>
            <exception>
            Exceptions thrown by this method depend on the underlying 
            platform dependent implementation.
            </exception>
        </member>
        <member name="T:Fusee.Base.Core.NamespaceDoc">
            <summary>
            <para>
            Types in this module implent FUSEE's basic functionality 
            such as operating system functionality abstraction with varying implementations
            on different platforms and general functionality not related to 3D rendering
            </para>
            <para>
            Among the most important classses are
            <list type="bullet">
              <item>
                <term><see cref="T:Fusee.Base.Core.AssetStorage"/></term>
                <description>Can be used in applications to load assets of various types.</description>
              </item>
              <item>
                <term><see cref="T:Fusee.Base.Core.Diagnostics"/></term>
                <description>Contains diagnostic aids to be used during debugging and logging.</description>
              </item>
              <item>
                <term><see cref="T:Fusee.Base.Core.Font"/></term>
                <description>Platform independent access to font data.</description>
              </item>
            </list>
            </para>
            <para>
            Some of the functionality relies on platform specific implementations found in underlying platform-dependent modules.
            Common classes used by both, this module and underlying platform-dependent implementation modules can be found int the
            <see cref="N:Fusee.Base.Common"/> namespace.
            </para>
            </summary>
        </member>
    </members>
</doc>
